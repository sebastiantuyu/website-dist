__NUXT_JSONP__("thoughts/p/pyclk", {data:[{title:"PyClk: Pip on steroids",thumbnail:"\u003Cdiv class='abstract'\u003E\u003Ch2\u003EWhy?\u003C\u002Fh2\u003EWhile pip is very powerfull, in some cases lacks certain tools to have more control over our python projects. After some thinking and exprimentation I start to explore different solutions to start creating a more node likely tool.\u003C\u002Fdiv\u003E\u003Ch2\u003EGetting started\u003C\u002Fh2\u003E\u003Cp\u003EPyClk is a wrapper around pip to boost their funcitonalities and improve the developer experience. Hands-on experience are usually the best way to learn\u002Fteach about any topic, therefore, run:\u003C\u002Fp\u003E\u003Cpre\u003E\u003Cp\u003Epip3 instally pyclk\u003C\u002Fp\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cb\u003Epyclk\u003C\u002Fb\u003Eallows you to initialize, purge, manage, and add your packages. Is also version-friendly, and therefore you can easly manage your versioning more smoothly without having any weird configurations, basically it provides this funcionalities out of the box.\u003C\u002Fp\u003E\u003Cp\u003ENow, you can try running:\u003Cpre\u003E\u003Cp\u003Epyclk\u003C\u002Fp\u003E\u003Cp\u003E#the response should be something like\u003Cbr\u003EPyClk v0.0.83\u003C\u002Fp\u003E\u003C\u002Fpre\u003E\u003C\u002Fp\u003E\u003Cp\u003EThe project can be found at my github account. To review and suggest the code, please feel free to leave a PR:\u003C\u002Fp\u003E\u003Cp\u003E\u003Ca href='https:\u002F\u002Fgithub.com\u002Fsebastiantuyu\u002Fpyclk'\u003Ehttps:\u002F\u002Fgithub.com\u002Fsebastiantuyu\u002Fpyclk\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Carticle\u003E\u003Ch2\u003ENew files, new configurations\u003C\u002Fh2\u003E\u003Cul\u003E\u003Cli\u003E\u003Ch3\u003Ereqs.yaml\u003C\u002Fh3\u003E\u003Cp\u003E\u003Cb\u003EPyclk\u003C\u002Fb\u003Eprovides out-of-the-box packages managing, therefore it allows you to manage your packages without the annoying requirements.txt, making the reqs.yaml file more usable since you can specify different useful fields:\u003Cul\u003E\u003Cli\u003Ename\u003C\u002Fli\u003E\u003Cli\u003Edescription\u003C\u002Fli\u003E\u003Cli\u003Eversion\u003C\u002Fli\u003E\u003Cli\u003Epackages\u003C\u002Fli\u003E\u003Cli\u003Escripts\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Fp\u003E\u003Cp\u003EThe following\u003Ckbd\u003Ereqs.yaml\u003C\u002Fkbd\u003Ebelogs to a project that you can found at:\u003Ca href='https:\u002F\u002Fgithub.com\u002Fsebastiantuyu\u002Fpython-monorepo'\u003Epython-monorepo on github\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cpre\u003E\u003Cp\u003Ename: dummy-project\u003Cbr\u003Eversion: 0.1.0\u003Cbr\u003Edescription: Yes. This is a dummy project.\u003Cbr\u003Eauthor:\u003Cbr\u003E  name: Sebastian Tuyu\u003Cbr\u003E  contact: dev@sebastiantuyu.com\u003Cbr\u003E  packages:\u003Cbr\u003E    - numpy==0.0.0\u003Cbr\u003E    - pandas=0.0.0\u003Cbr\u003E    - Flask=0.0.0\u003C\u002Fp\u003E\u003C\u002Fpre\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ch2\u003Epyclk.yaml\u003C\u002Fh2\u003E\u003Cp\u003EThis file is optional and can be used in your python projects to create a monorepo, I'll cover in depth monorepos later. But it allows to create\u003Ckbd\u003Ehooks\u003C\u002Fkbd\u003E: that are basically scripts that runs at the end of each command like\u003Ckbd\u003Ebuild\u003C\u002Fkbd\u003Eor\u003Ckbd\u003Estart\u003C\u002Fkbd\u003E.\u003C\u002Fp\u003E\u003Cp\u003EAgain, the following\u003Ckbd\u003Epyclk.yaml\u003C\u002Fkbd\u003Ebelogs to a project that you can found at:\u003Ca href='https:\u002F\u002Fgithub.com\u002Fsebastiantuyu\u002Fpython-monorepo'\u003Epython-monorepo on github\u003C\u002Fa\u003E\u003C\u002Fp\u003E\u003Cpre\u003Eproject: python-monorepo\u003Cbr\u003Eenv_folder:\u003Cbr\u003E  path: \u002Fvenv\u003Cbr\u003Ehooks:\u003Cbr\u003E  install:\u003Cbr\u003E    - .\u002Fscripts\u002Finstall\u003Cbr\u003Eservices:\u003Cbr\u003E  lambda-dummy:\u003Cbr\u003E    path: apps\u002Flambda-dummy\u003Cbr\u003E  lambda-jtc:\u003Cbr\u003E    path: apps\u002Flambda-json-to-csv\u003Cbr\u003E  api-backend:\u003Cbr\u003E    path: apps\u002Fapi-backend\u003C\u002Fpre\u003E\u003C\u002Fli\u003E\u003Cli\u003E\u003Ch3\u003Epython_modules\u003C\u002Fh3\u003E\u003Cp\u003EThis is a self-managed environment where all your packages are installed and handled by pyclk, is recommended to not touch it manually, since you could broke pyclk and create unexpected behaviors.\u003C\u002Fp\u003E\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003C\u002Farticle\u003E\u003Ch2\u003ESandbox execution in-depth\u003C\u002Fh2\u003E\u003Cp\u003EIn order to provide a simple way to run your apps without activating and deactivating your virtual environments each time, pyclk activates on the backgrund your\u003Ci\u003Evenv\u003C\u002Fi\u003E, so each time that your app is running using\u003Ckbd\u003Epyclk run &ltapp-name\u003E\u003C\u002Fkbd\u003Ethe result is something like:\u003C\u002Fp\u003E\u003Cfigure style='display:flex;flex-direction:column;align-items:center'\u003E\u003Cimg width='250px' src='https:\u002F\u002Fassets.sebastiantuyu.com\u002Fsandbox_diagram.png' alt=''\u003E\u003Cfigcaption\u003ESandbox environment explained.\u003C\u002Ffigcaption\u003E\u003C\u002Ffigure\u003E\u003Ch2\u003ECore commands\u003C\u002Fh2\u003E\u003Cp\u003EEach command commes with their own documentation using the\u003Ckbd\u003E--help\u003C\u002Fkbd\u003Eflag. The first commands that I choose to implement to provide a very simple buy useful tool are:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Cb\u003ERun:\u003C\u002Fb\u003ERun scripts for running the project.\u003C\u002Fli\u003E\u003Cli\u003E\u003Cb\u003EBuild:\u003C\u002Fb\u003ERun scripts for building the project.\u003C\u002Fli\u003E\u003Cli\u003E\u003Cb\u003EPurge:\u003C\u002Fb\u003ERemove all packages from the project.\u003C\u002Fli\u003E\u003Cli\u003E\u003Cb\u003EInstall:\u003C\u002Fb\u003EThe most usefull of all, it helps you to install all the project dependencies or just specific ones.\u003C\u002Fli\u003E\u003Cp\u003EI'll (try) be upgrading and adding more commands in the future.\u003C\u002Fp\u003E\u003C\u002Ful\u003E\u003Ch2\u003EHowever...\u003C\u002Fh2\u003E\u003Cp\u003EPyClk is still a very new cli in progress, I hope this will be very usefull for someone. Any improvements can be done throught the repository on the links provided at the beginning. Thank you.\u003C\u002Fp\u003E"}],fetch:{},mutations:void 0});